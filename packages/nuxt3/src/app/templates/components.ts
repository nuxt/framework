
import { relative } from 'upath'

import { createImportMagicComments } from '../../core/template.utils'

import type { Component } from '../../components/types'

type ComponentsTemplateOptions = {
  buildDir?: string
  components: Component[]
}

export const componentsTemplate = {
  filename: 'components.mjs',
  getContents (options: ComponentsTemplateOptions) {
    return `import { defineAsyncComponent } from 'vue'

const components = {
${options.components.map((c) => {
  const exp = c.export === 'default' ? 'c.default || c' : `c['${c.export}']`
  const magicComments = createImportMagicComments(c)

  return `  '${c.pascalName}': defineAsyncComponent(() => import('${c.filePath}' /* ${magicComments} */).then(c => ${exp}))`
}).join(',\n')}
}

export default function (nuxt) {
  for (const name in components) {
    nuxt.app.component(name, components[name])
    nuxt.app.component('Lazy' + name, components[name])
  }
}
`
  }
}

export const componentsTypeTemplate = {
  filename: 'components.d.ts',
  write: true,
  getContents: (options: ComponentsTemplateOptions) => `// Generated by components discovery
declare module 'vue' {
  export interface GlobalComponents {
${options.components.map(c => `    '${c.pascalName}': typeof import('${relative(options.buildDir, c.filePath)}')['${c.export}']`).join(',\n')}
  }

  export {}
}`
}
